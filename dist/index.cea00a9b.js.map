{"mappings":"AAAA,MAAM,SAAS,SAAS,cAAc;AACtC,SAAS,cAAc,mBAAmB,iBAAiB,SAAS;IAClE,OAAO,UAAU,OAAO;AAC1B;AAEA,mBAAmB;AACnB,MAAM,QAAQ,SAAS,iBAAiB;AACxC,MAAM,QAAQ,CAAC;IACb,KAAK,iBAAiB,SAAS,CAAC;QAC9B,MAAM,OAAO,KAAK,aAAa;QAE/B,qBAAqB;QACrB,IAAI,SAAS,KACX,OAAO,SAAS;YACd,KAAK;YACL,UAAU;QACZ;QACF,IAAI,SAAS,OAAO,KAAK,WAAW,MAAM;YACxC,MAAM,iBAAiB,SAAS,cAAc;YAC9C,eAAe,eAAe;gBAAE,UAAU;YAAS;QACrD;QAEA,0BAA0B;QAC1B,IAAI,KAAK,UAAU,SAAS,mBAC1B,OAAO,UAAU,OAAO;IAE5B;AACF;AAEA,aAAa;AACb,MAAM,cAAc,SAAS,cAAc;AAE3C,MAAM,WAAW,IAAI,qBACnB,CAAC;IACC,MAAM,MAAM,OAAO,CAAC,EAAE;IACtB,IAAI,CAAC,IAAI,gBAAgB,SAAS,KAAK,UAAU,IAAI;IACrD,IAAI,IAAI,gBAAgB,SAAS,KAAK,UAAU,OAAO;AACzD,GACA;IACE,MAAM;IACN,WAAW;IACX,YAAY;AACd;AAGF,SAAS,QAAQ;AAEjB,8DAA8D;AAC9D,SAAS;IACP,IAAI,OAAO,SAAS,cAAc;IAClC,KAAK,MAAM,UAAU;IACrB,KAAK,MAAM,gBAAgB;IAC3B,KAAK,MAAM,SAAS;IAEpB,KAAK,YAAY,SAAS,cAAc;IACxC,KAAK,YAAY,SAAS,cAAc;IAExC,SAAS,KAAK,YAAY;IAC1B,IAAI,cAAc,KAAK,iBAAiB;IACxC,KAAK,WAAW,YAAY;IAC5B,QAAQ,IAAI;IAEZ,IAAI,CAAC,aAAa,SAAS,KAAK,UAAU,IAAI;AAChD;AACA","sources":["js/app.js"],"sourcesContent":["const header = document.querySelector(\".header\");\ndocument.querySelector(\".btn-mobile-nav\").addEventListener(\"click\", () => {\n  header.classList.toggle(\"nav-open\");\n});\n\n// Smooth Scrolling\nconst links = document.querySelectorAll(\"a:link\");\nlinks.forEach((link) => {\n  link.addEventListener(\"click\", (e) => {\n    const href = link.getAttribute(\"href\");\n\n    // Scroll back to top\n    if (href === \"#\")\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\",\n      });\n    if (href !== \"#\" && href.startsWith(\"#\")) {\n      const sectionElement = document.querySelector(href);\n      sectionElement.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    // Close Mobile Navigation\n    if (link.classList.contains(\"main-nav__link\")) {\n      header.classList.toggle(\"nav-open\");\n    }\n  });\n});\n\n// Sticky Nav\nconst sectionHero = document.querySelector(\".section-hero\");\n\nconst observer = new IntersectionObserver(\n  (entries) => {\n    const ent = entries[0];\n    if (!ent.isIntersecting) document.body.classList.add(\"sticky\");\n    if (ent.isIntersecting) document.body.classList.remove(\"sticky\");\n  },\n  {\n    root: null, // means observe hero section inside the viewport\n    threshold: 0, // fire an event as soon as 0% of section-hero is in the viewport\n    rootMargin: \"-80px\", // the offset from hero end (the height of the stick nav)\n  }\n);\n\nobserver.observe(sectionHero);\n\n// Fixing flexbox gap property missing in some Safari versions\nfunction checkFlexGap() {\n  var flex = document.createElement(\"div\");\n  flex.style.display = \"flex\";\n  flex.style.flexDirection = \"column\";\n  flex.style.rowGap = \"1px\";\n\n  flex.appendChild(document.createElement(\"div\"));\n  flex.appendChild(document.createElement(\"div\"));\n\n  document.body.appendChild(flex);\n  var isSupported = flex.scrollHeight === 1;\n  flex.parentNode.removeChild(flex);\n  console.log(isSupported);\n\n  if (!isSupported) document.body.classList.add(\"no-flexbox-gap\");\n}\ncheckFlexGap();\n"],"names":[],"version":3,"file":"index.cea00a9b.js.map","sourceRoot":"/__parcel_source_root/"}